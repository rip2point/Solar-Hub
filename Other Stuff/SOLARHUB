--This was obfuscated with MoonSecV2
--init

return(function(km,ym,qm,Tm,Km,Zm,Mm,vm,um,Qm,Rm,Sm,Om,Lm,Im,rm,Hm,jm,fm,Pm,sm,Jm,hm,im,Xm,wm,em,am,om,dm,zm,pm,Nm,xm,gm,Em,Um,tm,Bm,Am,G,...)local C,Y,m,cm,b,l,a,f=am,pcall,tonumber,0X00,nil,nil,nil,nil;do while cm~=4 do if cm<=1 then if cm~=0 then a=fm.char;cm=2;else b=Im;do cm=3;end;end;else do if cm~=2 then l=fm.sub;cm=0X1;else do f=wm;end;cm=0X0004;end;end;end;end;end;local j,X=jm.insert,rawget;local K=(Om);local Z=(getfenv);local k,N=4294967296,Xm;local W=Tm;local A=(Km);cm=0;local I,Q=nil,nil;while true do do if cm~=0 then do Q=Nm;end;break;else I=Qm;cm=0X001;end;end;end;do cm=0x1;end;local y,d,P,q,R,u,w,x,t,H=nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);repeat if not(cm<=0X005)then if cm<=0X0008 then if not(cm<=6)then do if cm~=0X7 then cm=0X00007;else P=f(l(P,5),"..",function(bL)if W(bL,2)==0X48 then q=m(l(bL,Km,0x1));return'';else local QD=nil;for Yd=0X0,0X1 do if Yd~=0 then do if q then local Up,zp=0,nil;while 0.024584890169043527 do do if not(Up<=0)then if Up~=0X1 then do q=nil;end;Up=1;else return zp;end;else do zp=I(QD,q);end;do Up=2;end;end;end;end;else return QD;end;end;else do QD=a(m(bL,0X0010));end;end;end;end;end);do cm=0x4;end;end;end;else do t={[0X00000]=0X1};end;cm=0x00;end;else if not(cm<=9)then if cm~=10 then do cm=0X5;end;else do w=fm.match;end;cm=9;end;else x=k-1;cm=0X06;end;end;else if cm<=0X2 then do if cm<=0 then do H=function()local IM,MM,UM,rM,jM=0x1,nil,nil,nil,(nil);while(true)do if IM==0X0 then do A=A+0x4;end;break;else MM,UM,rM,jM=W(P,A,A+3);IM=0X0;end;end;return jM*16777216+rM*65536+UM*256+MM;end;end;cm=0X0C;else if cm~=0X001 then u=2147483648;cm=10;else y=(Z and Z()or sm);cm=0X3;end;end;end;else if cm<=0X003 then d=(zm or Zm);cm=11;else if cm==4 then R=function()local c0=(nil);for tF=0,0x2 do do if not(tF<=0X0)then if tF~=0X1 then return c0;else do A=A+0x1;end;end;else c0=W(P,A,A);end;end;end;end;cm=2;else doend;cm=8;end;end;end;end;until cm>11;local g=u-1;do local ef=(ym);do for AT=0x1,0X01f do t[AT]=ef;ef=ef*2;end;end;end;local O=setmetatable;cm=0X2;local h,r,L,E,o=nil,nil,nil,nil,nil;while cm<=4 do if not(cm<=1)then do if cm<=0x002 then do h=function(xF,BF,QF)local GF=(nil);for xu=0,0X0002 do if xu<=0X000 then GF=(xF/t[BF])%t[QF];else do if xu~=0X0001 then do return GF;end;else GF=GF-GF%0X1;end;end;end;end;end;end;cm=0X0;else do if cm~=3 then o={2,0X00003,0X005};cm=0x0005;else E={[Am]={[0]=0,1,0x2,Pm,4,qm,Rm,7,Hm,0X9,10,11,0X0000C,0XD,14,0Xf},{[0X0]=0x01,Am,3,2,5,4,0X07,0X00006,0X9,8,11,10,13,12,15,um},{[0]=0X2,0X3,0X0,1,0X6,7,4,0X5,0x0A,11,0X08,9,14,15,12,0xd},{[0x0]=3,0X2,0X0001,0,0X7,0x00006,5,0X4,0Xb,10,9,0X8,km,14,0XD,12},{[0]=4,qm,6,0X007,0X0,1,2,3,rm,0X00d,14,0Xf,0X00008,xm,0X0A,0X000b},{[0x0]=0X0005,0X004,7,Rm,Km,0X0,3,2,13,12,15,um,9,Hm,11,0X0000A},{[0]=0x6,0X007,0X4,qm,2,3,0,1,14,0Xf,12,0X0D,10,gm,0X00008,0X9},{[0]=0X7,0x6,5,0X04,3,0X002,0X01,0,0Xf,0xE,0xD,12,0X0000B,10,0X9,Hm},{[Am]=0X008,9,0Xa,0X0B,0X00c,0Xd,14,0Xf,0X000,1,2,0X3,0X4,5,0X6,0X0007},{[Am]=9,8,0XB,0XA,13,0X000C,0X000f,14,0X01,0X0,0X3,2,qm,4,7,6},{[0]=10,11,8,9,0X00e,0xF,0xC,0X000d,2,Pm,0X00000,1,0X006,7,0X4,0X5},{[0]=11,10,0x00009,8,15,14,13,12,3,0X02,1,0,0X7,6,5,4},{[0]=12,13,0XE,15,8,9,10,0XB,0X004,5,6,0X7,0,1,0X2,Pm},{[0X0]=13,12,0Xf,0XE,0X00009,8,0XB,10,0X00005,tm,7,0x00006,0X001,Am,0X03,2},{[0]=0xE,0xf,rm,0Xd,0X00a,11,0X00008,0X9,Rm,hm,4,5,0X2,0X3,0,0X1},{[Am]=0xf,0xe,13,12,11,0xa,xm,Hm,7,6,0x5,0X4,3,0X2,1,Am}};do cm=0x00004;end;end;end;end;end;else if cm==0 then r=0X2^0X0034;cm=1;else L=function()local iD,cD=H(),(H());local MD=0;do repeat if MD==0 then do if not(cD>=u)then else cD=cD-k;end;end;MD=0x00001;else return cD*k+iD;end;until(false);end;end;cm=3;end;end;end;local J=(function()local TJ=(H());local KJ,UJ,cJ,ZJ=nil,nil,nil,(nil);local VJ=(0x1);do for fD=0,0X4 do if not(fD<=0x001)then do if fD<=2 then UJ=(-0X0001)^h(KJ,31,0x0001);else if fD~=3 then ZJ=h(KJ,0,Lm)*k+TJ;else do cJ=h(KJ,0x14,0xB);end;end;end;end;elseif fD~=0X00 then if TJ==0X0000 and KJ==0 then return 0X0000;end;else KJ=H();end;end;end;local YJ=0x001;repeat if YJ~=0x0 then if cJ==0 then if ZJ~=0X0 then local wq=0;do while wq~=0X2 do if wq~=0X00 then VJ=0;wq=0X2;else cJ=0X1;wq=0X1;end;end;end;else do return UJ*0;end;end;else if cJ~=0x7FF then else if ZJ~=0X00000 then return UJ*(1/Am);else return UJ*(0X0/0X00);end;end;end;YJ=0;else do return UJ*(0x002^(cJ-1023))*(ZJ/r+VJ);end;end;until(false);end);local e=d and d[Jm]or function(f3,j3)local r3=(0x00003);local M3,W3=nil,nil;repeat do if r3<=0X0002 then if not(r3<=0)then if r3~=1 then do M3=0;end;r3=0;else return M3+f3*W3+j3*W3;end;else do j3=j3%k;end;r3=4;end;else do if not(r3<=3)then if r3~=4 then while f3>0X00 and j3>0 do local ZU=(1);local HU,LU=nil,(nil);repeat if ZU<=0x2 then if not(ZU<=0X0)then if ZU~=1 then do W3=W3*0X10;end;ZU=6;else HU=f3%0X10;do ZU=0X4;end;end;else M3=M3+E[HU][LU]*W3;ZU=0x5;end;elseif not(ZU<=0X00003)then if ZU~=0x4 then f3=(f3-HU)/0X00010;ZU=0X3;else LU=j3%0X10;ZU=0;end;else j3=(j3-LU)/16;do ZU=2;end;end;until ZU>0X005;end;r3=1;else W3=1;r3=5;end;else f3=f3%k;r3=2;end;end;end;end;until false;end;local S=(d and d[Em]or function(tG,uG)local JG=2;repeat do if not(JG<=0X0)then if JG~=1 then tG=tG%k;do JG=0X01;end;else uG=uG%k;JG=0x00;end;else return((tG+uG)-e(tG,uG))/0x0002;end;end;until false;end);local p=d and d.bor or function(ev,Iv)ev=ev%k;Iv=Iv%k;return x-S(x-ev,x-Iv);end;local M,v={[9]=3,[0X0000]=5,[0X4]=0X3,[Pm]=0X4,[9]=3,[0X00006]=3,[0X7]=5,[0X9]=0x7,[2]=0X7,[8]=6,[0X8]=Rm,[0x0005]=0x06},(d and d.lshift);local U=d and d.rshift;local z=(setfenv);local T=(dm);local B=d and d.bnot or function(tN)return x-(tN%k);end;local Dm=0x1;local F=em;do cm=1;end;repeat if cm==0X000 then U=U or function(lS,XS)for NH=0,1 do do if NH~=0 then if not(XS<0)then else return v(lS,-XS);end;else if XS>=32 then do return 0x0;end;end;end;end;end;local LS=(0);local CS=(nil);while 1875242300 do if LS~=0X0 then do return CS-CS%0X1;end;else CS=(lS%k/t[XS]);LS=1;end;end;end;break;else v=v or function(s2,J2)do for b2=0X0,2 do if b2<=0 then if not(J2>=Sm)then else return 0X0;end;elseif b2~=1 then return(s2*t[J2])%k;else if not(J2<0)then else return U(s2,-J2);end;end;end;end;end;cm=0;end;until false;local s=(unpack or pm);local i=(function()local FK,tK=0X0000,0X00;do while 0.4233272019624963 do local RE=W(P,A,A);A=A+0X01;do FK=p(FK,v(S(RE,0X07f),tK));end;if S(RE,128)~=0 then else return FK;end;tK=tK+0x007;end;end;end);local Gm=(R());local D=(type);local nm=R();local V=(error);local Fm=function(AU)local IU=({W(P,A,A+0X3)});local mU=(e(IU[0X0001],nm));local uU,rU,vU=0,nil,(nil);repeat if uU==0 then rU=e(IU[2],nm);uU=0X1;else vU=e(IU[0X3],nm);do uU=0X2;end;end;until uU>0X0001;do uU=1;end;local WU=nil;repeat if uU==0X0 then nm=(0x0055*nm+AU)%256;break;else WU=e(IU[tm],nm);uU=0X000;end;until(false);do for Wd=0x000,1 do do if Wd~=0 then return WU*16777216+vU*65536+rU*256+mU;else A=A+4;end;end;end;end;end;cm=4;local mm,Cm,c,Ym,bm=nil,nil,nil,nil,nil;while cm~=0X00005 do if not(cm<=1)then do if not(cm<=0X00002)then do if cm==3 then bm={};cm=0X5;else mm=function(...)do return C("#",...),{...};end;end;cm=0;end;end;else c=function()local Zl,vl=0X0000,(nil);while Zl<0X002 do do if Zl==0X0 then vl=i();do Zl=0x001;end;else if vl>g then do return vl-k;end;end;do Zl=2;end;end;end;end;do return vl;end;end;do cm=1;end;end;end;elseif cm~=0X00000 then Ym={};cm=0x3;else Cm=function(Oq)local sq=(H());local tq=("");for LK=0X0000,2 do if LK<=0X0 then for PV=Km,sq,7997 do local gV,ZV=nil,nil;local nV=0X03;do while nV<=0X04 do if nV<=0X00001 then if nV~=0X0 then ZV={W(P,A+PV-0X1,A+gV-Km)};nV=0x0;else for vR=Km,#ZV do for n4=0X0,1 do do if n4==0X00 then do ZV[vR]=e(ZV[vR],Gm);end;else Gm=(Oq*Gm+201)%Bm;end;end;end;end;nV=2;end;else if nV<=2 then tq=tq..a(s(ZV));nV=5;else if nV~=3 then if gV>sq then gV=sq;end;nV=0x001;else gV=PV+0x1f3D-0X0001;nV=4;end;end;end;end;end;end;else if LK==1 then A=A+sq;else do return tq;end;end;end;end;end;cm=0X2;end;end;cm=0X1;local Vm=nil;do while cm<0X2 do do if cm==0 then function Vm(Fv,Mv,Nv)local Xv,fv,Iv,vv=Mv[7],Mv[0X2],Mv[0X5],(Mv[0X9]);local tv,dv=Mv[0x1],Mv[3];local Rv=(Mv[0X8]);local bv=O({},{__mode="v"});local Hv,Pv=Mv[0X00006],(nil);do Pv=function(...)local US=0X1;local TS=({});local hS=((Z and Z()or _ENV));local CS,xS=mm(...);local zS=({[1]=TS,[2]=Mv});local ES,uS=0X0,(hS==y and Nv or hS);do CS=CS-0x1;end;for LH=0x0,CS do if Xv>LH then(TS)[LH]=xS[LH+1];else break;end;end;if not vv then xS=nil;else if not(Rv)then else TS[Xv]={n=CS>=Xv and CS-Xv+0X00001 or 0X0,s(xS,Xv+0X1,CS+0X1)};end;end;if uS~=hS then if not(z)then _ENV=uS;else(z)(Pv,uS);end;end;local dS,XS,NS,WS=Y(function()while 0.34649735443963214 do local kc=(tv[US]);local wc=(kc[0X1]);do US=US+0X1;end;if not(wc<47)then if wc>=0X46 then if not(wc>=0X52)then do if not(wc>=76)then if not(wc>=73)then if wc>=71 then if wc~=72 then TS[kc[3]]=e(TS[kc[0X0002]],TS[kc[0X0005]]);else if TS[kc[2]]~=TS[kc[5]]then else US=kc[3];end;end;else do TS[kc[3]]=TS[kc[0x2]]>TS[kc[0X5]];end;end;else if wc>=74 then do if wc~=75 then local Cv=kc[0x00003];local wv,Ov,uv=TS[Cv],TS[Cv+0X1],(TS[Cv+2]);TS[Cv]=Q(function()do for S4=wv,Ov,uv do(N)(true,S4);end;end;end);do US=kc[2];end;else do TS[kc[0X3]]=B(TS[kc[2]]);end;end;end;else do if kc[0X05]~=0Xcc then repeat local lx,wx=bv,(TS);if not(#lx>0X0)then else local lp={};for O5,T5 in K,lx do do for OO,nO in K,T5 do if nO[1]==wx and nO[2]>=0 then local Sh=nO[0X00002];if not(not lp[Sh])then else(lp)[Sh]={wx[Sh]};end;(nO)[1]=lp[Sh];nO[2]=0X1;end;end;end;end;end;until true;local Ae=kc[0X3];do return false,Ae,Ae;end;else US=US-0X001;(tv)[US]={[0X00003]=(kc[0X03]-0x5E),[2]=(kc[2]-0X5E),[1]=3};end;end;end;end;else do if wc>=79 then if wc>=80 then if wc==0X0051 then uS[kc[7]]=TS[kc[0X03]];else ES=kc[3];TS[ES]();ES=ES-1;end;else do repeat local EF,yF,KF=bv,TS,(kc[3]);if#EF>0 then local BL={};do for qQ,RQ in K,EF do do for YV,hV in K,RQ do do if not(hV[0X1]==yF and hV[0x2]>=KF)then else local mi=hV[0X2];if not(not BL[mi])then else BL[mi]={yF[mi]};end;(hV)[1]=BL[mi];(hV)[0X02]=0X1;end;end;end;end;end;end;end;until true;end;end;else if not(wc<77)then if wc~=78 then TS[kc[3]]=TS[kc[0X00002]]==TS[kc[5]];else if kc[5]==48 then US=US-0X01;(tv)[US]={[0X3]=(kc[3]-56),[1]=0x20,[2]=(kc[0X2]-0x38)};else repeat local kL,uL=bv,TS;if#kL>0 then local BW=({});for VT,RT in K,kL do for RB,oB in K,RT do if not(oB[0x1]==uL and oB[2]>=0)then else local sQ=oB[2];do if not(not BW[sQ])then else do(BW)[sQ]={uL[sQ]};end;end;end;oB[0x1]=BW[sQ];(oB)[0x2]=0X1;end;end;end;end;until true;return false,kc[0X3],ES;end;end;else(zS)[kc[2]]=TS[kc[0X3]];end;end;end;end;end;else if not(wc<0X0058)then do if wc>=0X5B then if not(wc>=92)then local ND=(kc[3]);local WD=(kc[2]);ES=ND+WD-0X1;do repeat local pY,sY=bv,(TS);do if not(#pY>0)then else local V1=({});do for iA,RA in K,pY do do for H_,E_ in K,RA do if E_[0x1]==sY and E_[0X2]>=0 then local q9=(E_[2]);if not(not V1[q9])then else do(V1)[q9]={sY[q9]};end;end;E_[0x1]=V1[q9];(E_)[2]=0X1;end;end;end;end;end;end;end;until true;end;do return true,ND,WD;end;else if wc~=93 then local vl=(kc[0X0002]);local Ol=TS[vl];do for Vd=vl+0x001,kc[0X00005]do Ol=Ol..TS[Vd];end;end;do TS[kc[3]]=Ol;end;else local YG=kc[0X3];local qG,EG=TS[YG]();do if qG then for w_=1,kc[0X05]do do(TS)[YG+w_]=EG[w_];end;end;US=kc[0X002];end;end;end;end;else if not(wc>=89)then local ax=kc[0x3];local Px=(kc[5]-0X001)*50;local tx=TS[ax];for C8=0X1,ES-ax do do(tx)[Px+C8]=TS[ax+C8];end;end;else do if wc~=90 then do if not(not(TS[kc[2]]<=TS[kc[0X5]]))then else US=kc[3];end;end;else(TS[kc[0x3]])[TS[kc[0X2]]]=kc[6];end;end;end;end;end;else if not(wc<0X55)then if not(wc<0X0056)then if wc==0X57 then local gR=(dv[kc[2]]);local KR=gR[0X4];local GR=(nil);local RR=(#KR);if not(RR>0X0)then else GR={};for GE=1,RR do local pE=KR[GE];if pE[0X0001]==0 then(GR)[GE-0x1]={TS,pE[0x2]};else GR[GE-1]=Fv[pE[2]];end;end;(j)(bv,GR);end;(TS)[kc[0X0003]]=Vm(GR,gR,uS);else do TS[kc[3]]=nil;end;end;else local B7=kc[0X3];local R7=CS-Xv;do if not(R7<0X00)then else R7=-1;end;end;for kp=B7,B7+R7 do do TS[kp]=xS[Xv+(kp-B7)+0X00001];end;end;ES=B7+R7;end;else if not(wc>=0X53)then repeat local cA,PA=bv,TS;if not(#cA>0)then else local Lo=({});for go,fo in K,cA do for zN,HN in K,fo do if not(HN[1]==PA and HN[0x2]>=0X0000)then else local LX=HN[2];do if not Lo[LX]then(Lo)[LX]={PA[LX]};end;end;HN[1]=Lo[LX];HN[0X0002]=0X1;end;end;end;end;until true;local DU=(kc[0x3]);return false,DU,DU+kc[0X2]-2;else if wc~=84 then repeat local ZF,IF=bv,TS;if not(#ZF>0X0)then else local hx={};for rC,vC in K,ZF do do for Bj,mj in K,vC do if not(mj[0X00001]==IF and mj[0X2]>=0)then else local L_=(mj[0x2]);if not hx[L_]then hx[L_]={IF[L_]};end;mj[0X1]=hx[L_];do(mj)[0x2]=0X0001;end;end;end;end;end;end;until true;return true,kc[0X3],0;else local hz=(kc[3]);local Oz,dz=TS[hz]();do if Oz then(TS)[hz+0X1]=dz;do US=kc[0x2];end;end;end;end;end;end;end;end;else if not(wc<58)then do if not(wc>=0X40)then if wc<0x00003D then if not(wc<59)then do if wc~=0x3c then local A5=(kc[3]);TS[A5]=TS[A5](TS[A5+0X1],TS[A5+0X2]);ES=A5;else local B9=(kc[3]);local y9=(TS[B9]);local l9=((kc[0X0005]-0X1)*50);for ji=0X0001,kc[2]do do(y9)[l9+ji]=TS[B9+ji];end;end;end;end;else if not(not TS[kc[0X0003]])then else do US=kc[2];end;end;end;else if wc<0X3e then local UD=Fv[kc[0x2]];UD[1][UD[2]]=TS[kc[0x003]];else if wc~=0x0003F then local Uz,Sz=kc[0X3],TS[kc[2]];TS[Uz+0x001]=Sz;(TS)[Uz]=Sz[kc[6]];else TS[kc[3]]=TS[kc[2]]+TS[kc[0X5]];end;end;end;else if not(wc<67)then do if wc>=0X44 then do if wc~=0x45 then TS[kc[3]]=TS[kc[2]]^TS[kc[0X005]];else do TS[kc[0X3]]=TS[kc[2]]/TS[kc[0X00005]];end;end;end;else local SV=(kc[0X00003]);do ES=SV+kc[2]-1;end;(TS[SV])(s(TS,SV+1,ES));ES=SV-0X01;end;end;else if wc>=65 then if wc~=0X42 then TS[kc[3]]=false;else(TS)[kc[0X003]]=p(TS[kc[2]],TS[kc[5]]);end;else if not(TS[kc[2]]<TS[kc[5]])then else US=kc[0X003];end;end;end;end;end;else if wc>=0X34 then do if not(wc>=55)then if not(wc>=53)then(TS)[kc[3]]=TS[kc[2]][TS[kc[0X005]]];else if wc==0X36 then local yh=(kc[3]);TS[yh]=TS[yh](TS[yh+0X1]);ES=yh;else local zC=Fv[kc[0X002]];do(TS)[kc[0X3]]=zC[0X1][zC[0X0002]];end;end;end;else if not(wc<0X38)then if wc~=0X00039 then local qu=kc[3];local Cu,eu,zu=TS[qu]();do if not(Cu)then else do(TS)[qu+1]=eu;end;(TS)[qu+0X02]=zu;US=kc[0X2];end;end;else TS[kc[0x03]]=bm[kc[0x0002]];end;else(TS)[kc[0x3]]=TS[kc[0X02]]-TS[kc[0X00005]];end;end;end;else if wc<49 then if wc==0X000030 then do(TS[kc[0x00003]])[TS[kc[0X2]]]=TS[kc[0X0005]];end;else TS[kc[3]]=TS[kc[0x00002]]<TS[kc[5]];end;else if wc<0X32 then TS[kc[3]]=TS[kc[0X2]]<=TS[kc[0X5]];else if wc==0X33 then local Gl=kc[0X2];local Hl=(kc[3]);do if Gl==0 then else do ES=Hl+Gl-0X1;end;end;end;local Tl,ol,Vl=nil,nil,kc[0X05];if Gl~=0x1 then Tl,ol=mm(TS[Hl](s(TS,Hl+1,ES)));else Tl,ol=mm(TS[Hl]());end;if Vl~=1 then if Vl~=0 then do Tl=Hl+Vl-2;end;ES=Tl+1;else Tl=Tl+Hl-0x1;ES=Tl;end;local so=0;for LM=Hl,Tl do so=so+0X0001;(TS)[LM]=ol[so];end;else ES=Hl-1;end;else if not(TS[kc[2]]<TS[kc[5]])then do US=kc[0X3];end;end;end;end;end;end;end;end;else if wc>=23 then do if wc<0x23 then if not(wc>=0X1D)then if wc<0X00001a then if wc>=24 then if wc==25 then TS[kc[0X3]]=TS[kc[0X02]][kc[6]];else(TS)[kc[3]]=S(TS[kc[2]],TS[kc[0X5]]);end;else if TS[kc[2]]~=kc[6]then US=kc[3];end;end;else if wc>=27 then if wc==0X1c then local C1=(kc[3]);TS[C1](TS[C1+1]);do ES=C1-1;end;else(TS[kc[0x3]])[kc[0X7]]=kc[6];end;else ES=kc[3];TS[ES]=TS[ES]();end;end;else if wc<32 then if not(wc>=0x1e)then(TS)[kc[3]]=true;else if wc==31 then local P5=(kc[2]);do TS[kc[3]]=TS[P5]..TS[P5+0X1];end;else local Yg=(kc[3]);local qg,rg=TS[Yg]();do if qg then US=kc[2];TS[Yg+0x3]=rg;end;end;end;end;else if not(wc>=33)then if kc[5]==17 then US=US-1;do tv[US]={[1]=0x0052,[0X2]=(kc[0x2]-156),[0X3]=(kc[0x00003]-156)};end;elseif kc[0X5]~=0X47 then TS[kc[3]]=-TS[kc[2]];else US=US-0x1;tv[US]={[2]=(kc[0x02]-74),[1]=0xf,[0x3]=(kc[0x3]-0X04a)};end;else if wc~=34 then TS[kc[0x03]]={s({},1,kc[2])};else if not(TS[kc[2]]<=TS[kc[0X5]])then else do US=kc[0X3];end;end;end;end;end;end;else if wc>=0X29 then if wc>=44 then if not(wc<0x2d)then if wc~=0X0002E then local Qp=kc[3];local Yp=(Q(function(...)(N)();for fO in...do(N)(true,fO);end;end));Yp(TS[Qp],TS[Qp+0X1],TS[Qp+0X00002]);ES=Qp;TS[Qp]=Yp;US=kc[0X2];else(TS)[kc[3]]=TS[kc[2]]-kc[0X006];end;else do if TS[kc[0X2]]~=TS[kc[5]]then US=kc[0X00003];end;end;end;else if not(wc>=0X2a)then local B_=kc[3];for CV=B_,B_+(kc[2]-1)do TS[CV]=xS[Xv+(CV-B_)+1];end;else if wc==43 then local lP=(kc[3]);local kP=Q(function(...)(N)();for oa,fa,Sa,wa,Ta,Za,Aa,La,Ha,ka in...do N(true,{oa,fa,Sa,wa,Ta,Za,Aa,La,Ha,ka});end;end);kP(TS[lP],TS[lP+1],TS[lP+0X2]);ES=lP;TS[lP]=kP;do US=kc[2];end;else do if TS[kc[0X2]]~=kc[0X006]then else do US=kc[0X03];end;end;end;end;end;end;else if not(wc<0X026)then if not(wc<39)then if wc~=40 then if kc[0X5]==168 then do US=US-0X001;end;(tv)[US]={[0X2]=(kc[2]-0X57),[0X00003]=(kc[0X3]-87),[0X1]=0X0010};elseif kc[0X5]==58 then US=US-0X00001;(tv)[US]={[2]=(kc[0X2]-0XCD),[0x3]=(kc[0X3]-205),[1]=85};elseif kc[5]~=0Xc3 then do for eP=kc[0X03],kc[2]do TS[eP]=nil;end;end;else US=US-1;do tv[US]={[0X003]=(kc[0X003]-0X0000d1),[0X00002]=(kc[2]-209),[1]=0X55};end;end;else do TS[kc[0X03]][kc[0X007]]=TS[kc[0X05]];end;end;else(TS)[kc[3]]=U(TS[kc[0X0002]],TS[kc[5]]);end;else if not(wc>=36)then if TS[kc[3]]then do US=kc[2];end;end;else if wc~=37 then local gV=kc[0X3];(TS)[gV]=TS[gV](s(TS,gV+1,ES));ES=gV;else TS[kc[3]]=TS[kc[2]]~=kc[6];end;end;end;end;end;end;else if not(wc<11)then if not(wc<0X11)then do if wc>=0X14 then if wc>=21 then if wc==22 then bm[kc[2]]=TS[kc[0X3]];else TS[kc[0X3]]={};end;else(TS)[kc[0X0003]]=TS[kc[0x0002]]~=TS[kc[0X5]];end;else do if wc>=18 then if wc==0x13 then US=kc[0x2];else do TS[kc[3]]=TS[kc[0X2]]>=TS[kc[0X005]];end;end;else do(TS)[kc[3]]=kc[0X00007];end;end;end;end;end;else if wc<0X000e then if wc>=12 then if wc==0X0000D then local Wt=TS[kc[0X0002]]/TS[kc[0x5]];(TS)[kc[0X3]]=Wt-Wt%1;else(TS)[kc[0X3]]=TS[kc[0x2]]%kc[0X6];end;else TS[kc[3]]=TS[kc[0X2]]*TS[kc[5]];end;else if not(wc>=0XF)then(TS)[kc[3]]=uS[kc[7]];else do if wc==0X000010 then(TS)[kc[3]]=TS[kc[2]];else(TS)[kc[0x3]]=#TS[kc[2]];end;end;end;end;end;elseif wc>=0X05 then if wc<8 then do if not(wc<0x00006)then if wc~=0X7 then do TS[kc[0x00003]]=kc[7];end;else(TS)[kc[0X3]]=zS[kc[0X2]];end;else TS[kc[3]]=v(TS[kc[0X02]],TS[kc[5]]);end;end;else if wc<9 then repeat local Nn,mn=bv,(TS);if not(#Nn>0)then else local RQ={};for sZ,yZ in K,Nn do for RK,gK in K,yZ do if gK[1]==mn and gK[2]>=0 then local ID=(gK[2]);if not RQ[ID]then do(RQ)[ID]={mn[ID]};end;end;(gK)[0x01]=RQ[ID];(gK)[2]=1;end;end;end;end;until true;return true,kc[0X3],1;else if wc==10 then if kc[0X5]==219 then do US=US-1;end;do tv[US]={[0x2]=(kc[2]-46),[0X1]=0X10,[3]=(kc[3]-46)};end;else(TS)[kc[3]]=not TS[kc[2]];end;else local Nj=(kc[3]);local Zj=(Q(function(...)N();for xp,Sp in...do N(true,xp,Sp);end;end));Zj(TS[Nj],TS[Nj+1],TS[Nj+2]);do ES=Nj;end;(TS)[Nj]=Zj;US=kc[0X2];end;end;end;else if not(wc>=0X2)then do if wc~=1 then local c2=kc[0X3];(TS[c2])(TS[c2+0X00001],TS[c2+2]);ES=c2-0X01;else local ay=(kc[3]);TS[ay](s(TS,ay+1,ES));ES=ay-0X1;end;end;else if not(wc>=0X3)then do TS[kc[0X3]]=TS[kc[0X02]]%TS[kc[0X00005]];end;else if wc==0X4 then if not(not(TS[kc[0X2]]<=kc[6]))then else US=kc[0X3];end;else repeat local rM,wM=bv,(TS);do if not(#rM>0X0)then else local NJ={};for Xe,de in K,rM do for aC,AC in K,de do if not(AC[1]==wM and AC[0x02]>=0)then else local Ct=AC[0x2];if not NJ[Ct]then do NJ[Ct]={wM[Ct]};end;end;(AC)[0X001]=NJ[Ct];AC[2]=1;end;end;end;end;end;until true;return;end;end;end;end;end;end;end;end);if dS then if XS then do if WS~=1 then return TS[NS](s(TS,NS+1,ES));else return TS[NS]();end;end;elseif not(NS)then else return s(TS,NS,WS);end;elseif D(XS)=="stri\110g"then if w(XS,"\097\116\116\101m\112\116 \116\111\032\121i\101ld a\099ros\115 \109\101\116\097\109\101\116h\111\100\047\067\037\045\099\097\108\108 bou\110\100ary")then return coroutine.yield();end;if not(w(XS,'\094\046\045:%d+:\032'))then(V)(XS,0X0);else V('\076ur\097p\104 S\099r\105p\116:'..(Iv[US-1]or'\040int\101rna\108)').."\058 "..b(XS),0);end;else(V)(XS,0);end;end;end;if not(z)then else(z)(Pv,Nv);end;return Pv;end;do cm=2;end;else do cm=0;end;end;end;end;end;local function lm()local TU,nU,BU,ZU={{},nil,{},nil,{},vm,nil,nil,nil},{},nil,nil;do for JI=0X0,0X1 do if JI~=0 then do ZU=TU[3];end;else BU=H()-Um;end;end;end;local AU=nil;for px=0,0X1 do if px~=0 then do AU=H();end;else for vJ=0,BU-0x001 do do ZU[vJ]=lm();end;end;end;end;local oU=(0X00);local qU=(nil);repeat do if oU<=0X00001 then if oU~=0x00000 then(TU)[om]=R();break;else for MM=Km,AU do local DM=H();local sM=(H());local OM=nil;for cC=0,1 do if cC~=0 then do for bM=DM,sM do do TU[0X5][bM]=OM;end;end;end;else OM=H();end;end;end;do oU=2;end;end;else if oU~=2 then do qU=0X1;end;oU=0X00001;else(TU)[0XC]=R();do oU=3;end;end;end;end;until false;TU[0X0011]=R();local YU=(H()-15310);local hU=({});oU=5;local PU,FU,HU,vU=nil,nil,nil,nil;while oU<0X8 do if oU<=0X3 then if not(oU<=1)then if oU==0X00002 then for Vf=Km,YU do local of=(R());local Yf,gf=nil,(nil);for RP=0X0,3 do if RP<=0X001 then do if RP==0 then Yf=nil;else hU[Vf-1]=qU;end;end;else if RP~=0X2 then gf={Yf,{}};else if of==0Xb then Yf=false;elseif of==0X000Ee then Yf=J();elseif of==148 then Yf=J();elseif of==0X50 then do Yf=L();end;elseif of==0X09 then Yf=l(Cm(PU),H());elseif of==0X77 then Yf=J()+H();elseif of==0X00005c then Yf=Mm;elseif of==117 then Yf=l(Cm(PU),0X00003);elseif of~=0XB5 then else do Yf=L();end;end;end;end;end;local kf=0X0000;while kf<3 do if not(kf<=0)then if kf==1 then qU=qU+0x1;kf=0x2;else do if HU then(Ym)[Dm]=gf;Dm=Dm+0x1;end;end;kf=0X3;end;else(nU)[qU]=gf;kf=1;end;end;end;oU=4;else HU=R()~=0X0;oU=2;end;else if oU==0 then FU={};do oU=0X3;end;else do vU=R();end;oU=0x8;end;end;else if oU<=5 then if oU==0X4 then do TU[0X0004]=FU;end;oU=7;else do PU=R();end;oU=0;end;else if oU~=6 then for hH=0x1,i()do(FU)[hH]={R(),i()};end;oU=6;else do(TU)[0X2]=i();end;oU=0X001;end;end;end;end;oU=0;do repeat if oU==0X0 then TU[0X9]=h(vU,1,0X1)~=0;oU=0X1;else(TU)[0X8]=h(vU,0x0002,0X01)~=0;do break;end;end;until false;end;local eU,CU=nil,(nil);do for fP=0,9 do if not(fP<=0x004)then if not(fP<=0X6)then if not(fP<=7)then if fP~=0X8 then return TU;else do(TU)[gm]=H();end;end;else do TU[hm]=i();end;end;else if fP~=0X5 then for DV=0X00001,eU do local yV=TU[0x1][DV];do for XO,vO in im(o)do local HO,oO,NO=0X00,nil,nil;while(true)do if HO<=0 then oO=M[vO];HO=2;else if HO==0X00001 then do if NO==0x00b then local aT=(hU[yV[vO]]);local XT=nU[aT];if XT then local Mf=0X00;local Pf=nil;repeat if Mf<=0X0000 then(yV)[oO]=XT[Km];do Mf=0X2;end;else if Mf==1 then Pf[#Pf+0X1]={yV,oO};Mf=3;else Pf=XT[0X2];Mf=0X1;end;end;until Mf==0x3;end;elseif NO==14 then yV[vO]=DV+yV[vO]+0X0001;end;end;break;else NO=yV[oO];HO=1;end;end;end;end;end;end;else for hK=1,eU do do(CU)[hK]={[2]=c(),[Km]=i(),[0X6]=R(),[0X00003]=c(),[0X005]=c(),[7]=R(),[0x4]=R()};end;end;end;end;else if not(fP<=0x1)then if not(fP<=2)then do if fP==3 then do eU=H()-0X16144;end;else CU=TU[0x1];end;end;else(TU)[0X11]=H();end;else if fP==0 then TU[0X00006]=i();else(TU)[0xA]=R();end;end;end;end;end;end;local Wm=(lm());cm=0x2;while true do do if not(cm<=0X000)then if cm==1 then do return Vm(vm,Wm,y)(...);end;else(bm)[0X0002]=Ym;do cm=0X00;end;end;else do Ym=nil;end;cm=1;end;end;end;end)(0XF,0X002,5,string.byte,0x1,bit32,true,nil,0X000E,string.rep,6,0X20,next,20,tostring,12,8,table,string,0X3,_ENV,'\098\120o\114',7,ipairs,coroutine.yield,string.gsub,assert,select,0Xa,rawset,bit,table.unpack,coroutine.wrap,0X09,11,"b\097n\100",72082,4,256,0X0000,{0xE627,1086144582,1531020685,0x3Aeb285,3978383093,0x00002650f557,0XB04b05f6,840747081,0x00006bB286E5},...);
wait() print("yes yes very good very nice")
